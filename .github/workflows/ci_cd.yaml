name: CI/CD pipeline

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  workflow_dispatch:

jobs:
  dockerbuild:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag workflow-test:$(date +%s)

  install-and-test:
    needs: dockerbuild
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.extract_version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Create venv and install packages
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip

      - name: Install project dependencies
        run: |
          source venv/bin/activate
          pip install -e.[dev]
          pip install .

      - name: Extract version from pyproject.toml
        id: extract_version
        run: |
          python -m venv venv
          source venv/bin/activate
          VERSION=$(python -c "from setuptools_scm import get_version; print(get_version())")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          git tag $VERSION
          git push origin $VERSION

      - name: Analysing the code with ruff and pre-commit
        run: |
          source venv/bin/activate
          SKIP=no-commit-to-branch pre-commit run --all-files

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest -n auto --cov=src --instafail --randomly

  build-and-run-system:
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'
      - name: Create venv and install packages
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
      - name: Install project dependencies
        run: |
          source venv/bin/activate
          pip install -e.[dev]
          pip install .

      - name: make bash script executable
        run: |
          chmod +x ./run.sh

      - name: Run the bash script
        run: |
          ./run.sh run_pipelines

  push-and-publish:
    needs: [install-and-test, build-and-run-system]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # type: ignore
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64, linux/x86_64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/us-visa-prediction-mlops-project:latest-${{ secrets.DOCKERHUB_USERNAME }}/us-visa-prediction-mlops-project:${{ needs.install-and-test.outputs.version_tag }}

      - name: Image Digest
        run: echo ${{ steps.push-and-publish.outputs.digest }} # type: ignore
